{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/svg-baker-runtime/browser-symbol.js","webpack:///./node_modules/svg-sprite-loader/runtime/browser-sprite.build.js","webpack:///./src/static/js/modal.js","webpack:///./src/static/js/rate-list.js","webpack:///./src/static/js/big-numbers.js","webpack:///./src/static/img/cross.svg"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","e","window","global","factory","SpriteSymbol","ref","id","viewBox","content","createCommonjsModule","fn","stringify","toString","destroy","this$1","forEach","prop","self","deepmerge","isMergeableObject","val","nonNullObject","cloneIfNecessary","optionsArgument","clone","Array","isArray","defaultArrayMerge","target","source","destination","slice","indexOf","push","array","options","arrayMerge","keys","mergeObject","all","length","Error","reduce","prev","next","namespaces_1","default","svg","uri","xlink","defaultAttrs","wrapInSvgString","attributes","attrs","map","attr","replace","join","objectToAttrsString","SpriteSymbol$$1","BrowserSpriteSymbol","apply","arguments","__proto__","constructor","prototypeAccessors","isMounted","node","createFromExistingNode","getAttribute","outerHTML","unmount","mount","mountTarget","document","querySelector","render","appendChild","hasImportNode","importNode","doc","DOMParser","parseFromString","documentElement","parse","childNodes","parentNode","removeChild","defineProperties","obj","svg$1","xlink$1","defaultConfig","style","Sprite","config","symbols","add","symbol","existing","find","remove","splice","filter","has","stringifiedSymbols","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayFrom","arrayLike","ua","navigator","userAgent","browser","isChrome","test","isFirefox","isIE","isEdge","evalStylesIEWorkaround","updatedNodes","querySelectorAll","textContent","getUrlWithoutFragment","url","location","href","split","eventName","angular","run","$rootScope","$on","newUrl","oldUrl","data","event","createEvent","initCustomEvent","dispatchEvent","selector","insertBefore","xLinkNS","xLinkAttrName","specialUrlCharsPattern","encoder","match","charCodeAt","toUpperCase","sprite","attList","attSelector","updateUrls","references","startsWith","replaceWith","startsWithEncoded","replaceWithEncoded","nodes","matcher","acc","arrayfied","matched","concat","selectAttributes","localName","setAttributeNS","updateReferences","Events","MOUNT","SYMBOL_MOUNT","BrowserSprite","Sprite$$1","cfg","emitter","on","type","handler","off","emit","evt","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","addEventListener","spriteNode","symbolNode","detail","isNewSymbol","attach","removeEventListener","prepend","mountNode","usages","ready$1","listener","fns","hack","loaded","doScroll","readyState","shift","setTimeout","loadSprite","getElementById","body","Modal","[object Object]","box","contentBox","getElementsByClassName","closeBut","_init","click","innerHTML","html","rates","from","rate","set","BigNumbers","first","second","step","getArray","res","fL","sL","parseInt","cleanVal","firtsInp","secondInp","resBox","bigNumbers","calc","sum","inp","browser_symbol_default","a","use","browser_sprite_build_default"],"mappings":"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","file":"./static/js/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSpriteSymbol = factory());\n}(this, (function () { 'use strict';\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nreturn BrowserSpriteSymbol;\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSprite = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; ')\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar ua = navigator.userAgent;\n\nvar browser = {\n  isChrome: /chrome/i.test(ua),\n  isFirefox: /firefox/i.test(ua),\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: /msie/i.test(ua) || /trident/i.test(ua),\n  isEdge: /edge/i.test(ua)\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(startsWithEncoded, replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE || browser.isEdge) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n      config.locationChangeAngularEmitter = 'angular' in window;\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox;\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nvar ready$1 = createCommonjsModule(function (module) {\n/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  { module.exports = definition(); }\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState);\n\n\n  if (!loaded)\n  { doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener);\n    loaded = 1;\n    while (listener = fns.shift()) { listener(); }\n  }); }\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn);\n  }\n\n});\n});\n\nvar spriteNodeId = '__SVG_SPRITE_NODE__';\nvar spriteGlobalVarName = '__SVG_SPRITE__';\nvar isSpriteExists = !!window[spriteGlobalVarName];\n\n// eslint-disable-next-line import/no-mutable-exports\nvar sprite;\n\nif (isSpriteExists) {\n  sprite = window[spriteGlobalVarName];\n} else {\n  sprite = new BrowserSprite({ attrs: { id: spriteNodeId } });\n  window[spriteGlobalVarName] = sprite;\n}\n\nvar loadSprite = function () {\n  /**\n   * Check for page already contains sprite node\n   * If found - attach to and reuse it's content\n   * If not - render and mount the new sprite\n   */\n  var existing = document.getElementById(spriteNodeId);\n\n  if (existing) {\n    sprite.attach(existing);\n  } else {\n    sprite.mount(document.body, true);\n  }\n};\n\nif (document.body) {\n  loadSprite();\n} else {\n  ready$1(loadSprite);\n}\n\nvar sprite$1 = sprite;\n\nreturn sprite$1;\n\n})));\n","class Modal {\r\n\r\n  constructor() {\r\n    const box = document.getElementById(\"modal\") || null;\r\n    if(!box){ return }\r\n    this.box = box;\r\n    this.contentBox = this.box.getElementsByClassName(\"modal__content\")[0];\r\n    this.closeBut = this.box.getElementsByClassName(\"modal__close\")[0];\r\n    this._init();\r\n  }\r\n\r\n  _init() {\r\n    this.box.addEventListener(\"click\", (e) => {\r\n        e.target === this.box ? this.closeBut.click() : \"\";\r\n    });\r\n\r\n    if(this.contentBox.innerHTML.length < 10){\r\n      this.closeBut.click();\r\n    }\r\n  }\r\n\r\n  set(html = \"\") {\r\n    if(!this.contentBox){ return }\r\n    this.contentBox.innerHTML = html;\r\n  }\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    window.Modal = new Modal();\r\n});","document.addEventListener(\"DOMContentLoaded\", () => {\r\n    const rates = document.getElementsByClassName(\"rate\");\r\n    Array.from(rates).forEach( (rate) => {\r\n        rate.addEventListener(\"click\", (e) => {\r\n            Modal.set(rate.outerHTML);\r\n        });\r\n    });\r\n});","class BigNumbers {\r\n\r\n  constructor() {\r\n    this.first = \"\";\r\n    this.second = \"\";\r\n    this.step = 10;\r\n  }\r\n\r\n  sum() {\r\n    const first = this.getArray(this.first),\r\n      second = this.getArray(this.second);\r\n    let res = [];\r\n\r\n    for( let i=0, fL=first.length, sL=second.length; ((i < fL) || (i < sL)); i++ ) {\r\n      const val = parseInt(first[i] || 0) + parseInt(second[i] || 0);\r\n      res.push(val);\r\n    }\r\n    return res.join(\"\");\r\n  }\r\n\r\n  cleanVal(val=\"\"){\r\n    return (val + \"\").replace(/\\D+/g,\"\");\r\n  }\r\n\r\n  getArray(val=\"\") {\r\n    return this.cleanVal(val).split(\"\");\r\n  }\r\n\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const firtsInp = document.getElementById(\"first-number\"),\r\n    secondInp = document.getElementById(\"second-number\"),\r\n    resBox = document.getElementById(\"numbers-result\");\r\n  if(!firtsInp || !secondInp || !resBox){ return; }\r\n  let bigNumbers = new BigNumbers();\r\n\r\n  function calc(){\r\n    bigNumbers.first = firtsInp.value;\r\n    bigNumbers.second = secondInp.value;\r\n    resBox.innerHTML = bigNumbers.sum();\r\n  };\r\n  calc();\r\n\r\n  [firtsInp, secondInp].forEach( (inp) => {\r\n      inp.addEventListener(\"input\", () => {\r\n          calc();\r\n          inp.value = bigNumbers.cleanVal(inp.value);\r\n      });\r\n  });\r\n});\r\n","import SpriteSymbol from \"svg-baker-runtime/browser-symbol\";\nimport sprite from \"svg-sprite-loader/runtime/browser-sprite.build\";\nvar symbol = new SpriteSymbol({\n  \"id\": \"cross\",\n  \"use\": \"cross-usage\",\n  \"viewBox\": \"0 0 352 512\",\n  \"content\": \"<symbol aria-hidden=\\\"true\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" viewBox=\\\"0 0 352 512\\\" class=\\\"svg-inline--fa fa-times fa-w-11\\\" id=\\\"cross\\\"><path fill=\\\"currentColor\\\" d=\\\"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\\\" /></symbol>\"\n});\nvar result = sprite.add(symbol);\nexport default symbol"],"sourceRoot":""}